{"pageProps":{"note":{"id":"p2t6nyat9y9t6xeapp0wawq","title":"Types","desc":"","updated":1647692197714,"created":1647532191271,"custom":{},"fname":"lang.haskell.types","type":"note","vault":{"fsPath":"vault"},"contentHash":"9d28e3f5a1464a936c6c22b242395252","links":[],"anchors":{"basic-types":{"type":"header","text":"Basic Types","value":"basic-types","line":10,"column":0,"depth":2},"list-types":{"type":"header","text":"List Types","value":"list-types","line":18,"column":0,"depth":2},"tuples":{"type":"header","text":"Tuples","value":"tuples","line":27,"column":0,"depth":2},"function-types":{"type":"header","text":"Function Types","value":"function-types","line":43,"column":0,"depth":2},"type-declarations":{"type":"header","text":"Type declarations","value":"type-declarations","line":71,"column":0,"depth":2}},"children":[],"parent":"ojnogx9md793ue6tbc59sdd","data":{}},"body":"<h1 id=\"types\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#types\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Types</h1>\n<p>It's a good practice in Haskell to write explicitly the types and not to rely exclusively on inference.</p>\n<h2 id=\"basic-types\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#basic-types\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Basic Types</h2>\n<ul>\n<li>Bool</li>\n<li>Char</li>\n<li>String</li>\n<li>Int</li>\n<li>Float</li>\n</ul>\n<h2 id=\"list-types\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#list-types\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>List Types</h2>\n<p>List is a sequence of values of the same type</p>\n<pre class=\"language-hs\"><code class=\"language-hs\"><span class=\"token punctuation\">[</span><span class=\"token constant\">False</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">True</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">False</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">Bool</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token char string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token char string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token char string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">Char</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h2 id=\"tuples\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#tuples\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Tuples</h2>\n<p>A tuple is a sequence of values of different <strong>types</strong></p>\n<pre class=\"language-hs\"><code class=\"language-hs\"><span class=\"token punctuation\">(</span><span class=\"token constant\">False</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">True</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Bool</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Bool</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token constant\">False</span><span class=\"token punctuation\">,</span> <span class=\"token char string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">True</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Bool</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Char</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Bool</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>The type of a tuple encodes it's size (unlike lists). Types unrestricted.</p>\n<pre class=\"language-hs\"><code class=\"language-hs\"><span class=\"token punctuation\">(</span><span class=\"token char string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">False</span><span class=\"token punctuation\">,</span> <span class=\"token char string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Char</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Bool</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token constant\">True</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token char string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token char string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">::</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Bool</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">Char</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"function-types\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#function-types\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Function Types</h2>\n<p>A function is a mapping between two types</p>\n<pre><code>not :: Bool -> Bool\n</code></pre>\n<ul>\n<li>Polymorphic functions:</li>\n</ul>\n<p>a ~= any (or b or c), p. e:</p>\n<pre><code>length :: [a] -> Int\n</code></pre>\n<ul>\n<li>Overloaded functions: a polymorphic function is overloaded if its type contain one or more class constrainsts, e.g.</li>\n</ul>\n<pre><code>(+) :: Num a => a -> a -> a\n</code></pre>\n<p>(a has to be a numberic type)</p>\n<ul>\n<li>Num: Numeric types (+)</li>\n<li>Eq: equality types (==)</li>\n<li>Ord: ordered types (&#x3C;)</li>\n</ul>\n<h2 id=\"type-declarations\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#type-declarations\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Type declarations</h2>\n<pre class=\"language-hs\"><code class=\"language-hs\"><span class=\"token keyword\">type</span> <span class=\"token constant\">Pos</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Int</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token hvariable\">origin</span> <span class=\"token operator\">::</span> <span class=\"token constant\">Pos</span>\n<span class=\"token hvariable\">origin</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token hvariable\">left</span> <span class=\"token operator\">::</span> <span class=\"token constant\">Pos</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Pos</span>\n<span class=\"token hvariable\">left</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">x</span><span class=\"token punctuation\">,</span><span class=\"token hvariable\">y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">x</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token hvariable\">y</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>We can use params:</p>\n<pre class=\"language-hs\"><code class=\"language-hs\"><span class=\"token keyword\">type</span> <span class=\"token constant\">Pair</span> <span class=\"token hvariable\">a</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">a</span><span class=\"token punctuation\">,</span> <span class=\"token hvariable\">a</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token hvariable\">mult</span><span class=\"token operator\">::</span> <span class=\"token constant\">Pair</span> <span class=\"token constant\">Int</span> <span class=\"token operator\">-></span> <span class=\"token constant\">Int</span>\n<span class=\"token hvariable\">mult</span> <span class=\"token punctuation\">(</span><span class=\"token hvariable\">m</span><span class=\"token punctuation\">,</span><span class=\"token hvariable\">n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token hvariable\">m</span><span class=\"token operator\">*</span><span class=\"token hvariable\">n</span>\n</code></pre>","noteIndex":{"id":"6hycu8o8696a4tqfk3yixvz","title":"andesol / Notes","desc":"","updated":1647717551893,"created":1647099700861,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4da88363f6ab41266c3e736d2b0d3249","links":[],"anchors":{"welcome-to-my-notes":{"type":"header","text":"Welcome to my notes","value":"welcome-to-my-notes","line":8,"column":0,"depth":1}},"children":["ohq0k0ofojwl0mcabqvn1ri","cgw8zy2pphkvk8pp1rxndxr","zu16j6vkw8ndf9n4zj98cmh"],"parent":null,"data":{},"body":"\n# Welcome to my notes\n\nHere you'll find a bunch of quick notes:\n\n- Unpolished\n- Sometimes incorrect\n- Maybe not even in English.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{}},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","assetsPrefix":"/vault","siteUrl":"https://andesol.github.io","seo":{"title":"andesol / Notes","description":"Notes about programming"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enablePrettyLinks":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}